#!/bin/bash

libexec="$(cd "$(dirname "$0")" && pwd)"
. "${libexec}/base.sh"
. "${libexec}/version.sh"

check_env () {
    local var=$1
    local default=$2
    local arg=$3
    if [[ -n ${!var} ]]; then
        export "$var"="${!var}"
    else
        if [[ $var = CH_TEST_SCOPE ]]; then
                check=scope
        else
            check=prefix
        fi
        if [[ -n ${!check} ]]; then
            export "$var"="$arg"
        else
            export "$var"="$default"
        fi
    fi
    printf '%s\t\t%s\n' "$var"  "${!var}"
}

fatal () {
    printf '%s\n\n' "$1" 1>&2
    exit 1
}

perm_dirs () {
    if [[ -z $ch_have_sudo ]] \
    || [[ $CH_TEST_PERMDIRS = 'skip' ]] \
    || [[ -n $CH_TEST_DONT_SUDO ]]; then
        return 0
    fi
    printf '\nFile permission enforcement tests:\n'
    for d in $CH_TEST_PERMDIRS; do
        if [[ -d "${d}/perms_test" ]]; then
            printf "%s/perms_test exists. skipping...\n" "$d"
            continue
        else
            sudo ./make-perms-test "$d" "$USER" nobody
        fi
    done
}

topdir=${ch_bin%/bin}
version=$(version 2>&1)

# Determine test directory.
if [[ -d "${topdir}/test" ]]; then
    # local install
    testdir=${topdir}/test
else
    # prefix installation
    testdir=${topdir%/charliecloud}/libexec/charliecloud-${version}
fi

# shellcheck disable=SC2034
usage=$(cat <<EOF
Run the Charliecloud test suite.

Usage:

  $ $(basename "$0") [ARGS ...] PHASE

You must have the charliecloud test suite installed.
EOF
)

parse_basic_args "$@"

if [ "$#" -lt 1 ]; then
    usage
fi

# Parse arguments
while [[ $# -gt 0 ]]; do
    opt=$1; shift
    case $opt in
    build|run|examples|all|clean)
        [[ -z $phase ]] || fatal 'phase: assigned more than once'
        phase=$opt
        ;;
    -p|--prefix)
        [[ -z $prefix ]] || fatal 'prefix: assigned more than once'
        prefix=$1; shift
        ;;
    -s|--scope)
        [[ -z $scope ]] || fatal 'scope: assigned more than once'
        scope=$1; shift
        ;;
    --dry-run)
        dry=true
        ;;
    *)
        fatal "unrecognized argument: $opt"
    esac
done

# Sanity check
[[ -d $testdir ]] || fatal "Unable to locate the Charliecloud test suite."
cd "$testdir"     || fatal 'cannot cd into the test directory'
[[ -n $phase ]]   || fatal 'test phase not specified'

printf 'running tests from:\t%s\n' "$testdir"

check_env CH_TEST_TARDIR   '/var/tmp/tar'  "${prefix}/tar"
check_env CH_TEST_IMGDIR   '/var/tmp/dir'  "${prefix}/dir"
check_env CH_TEST_PERMDIRS '/var/tmp /tmp' "$prefix"
check_env CH_TEST_SCOPE    'standard'      "$scope"

if [[ -z $dry ]]; then
    # Avoid cryptic bats error (#347) that occurs when setting a CH_TEST
    # variable to a path where there are two or more directories that do not
    # exist.
    [[ -d $CH_TEST_TARDIR ]] || mkdir -p "$CH_TEST_TARDIR"
    [[ -d $CH_TEST_IMGDIR ]] || mkdir -p "$CH_TEST_IMGDIR"
else
    if [[ $phase = clean ]]; then
        printf 'rm -rf "$CH_TEST_TARDIR"\nrm -rf "$CH_TEST_IMGDIR"\n'
    else
        if [[ ! $phase  = run ]]; then
            printf 'for d in %s do;\n'
            printf '\tsudo ./make-perms-test "$d" "$USER" nobody;\ndone\n'
        fi
        case $phase in
        build) echo "make test-build";;
        run)   echo "make test-run";;
        all)   echo "make test";;
        esac
    fi
    exit 0
fi

# Execute phase
case $phase in
    build)
        perm_dirs
        make test-build
    ;;
    run)
        make test-run
    ;;
    examples)
        make test-test
    ;;
    all)
        perm_dirs
        make test
    ;;
    clean)
        echo "rm -rf  $CH_TEST_TARDIR"
        rm -rf "$CH_TEST_TARDIR"
        echo "rm -rf $CH_TEST_IMGDIR"
        rm -rf "$CH_TEST_IMGDIR"
    ;;
esac
